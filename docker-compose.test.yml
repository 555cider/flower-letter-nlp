#===================
# TEST ENV
#===================

version: '3.8'

services:
  test_nginx:
    build: 
      context: ./client
      dockerfile: Dockerfile
    container_name: test_nginx_container
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flowerletter-test.rule=HOST(`www.${TEST_DOMAIN}`,`${TEST_DOMAIN}`)"
      - "traefik.http.routers.flowerletter-test.tls=true" # HTTPS
      - "traefik.http.routers.flowerletter-test.tls.certresolver=letsencrypt"
      
  test_api:
    build: ./server/project
    command: uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000
    container_name: test_api_container
    volumes:
      - ./server/project:/usr/src/app # for automatic reloading
    expose:
      - 8000
    env_file:
      - ./server/.env.test
    depends_on:
      - postgres_db
      - mongo_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-test.rule=Host(`${TEST_API_DOMAIN}`)"
      - "traefik.http.routers.api-test.tls=true" # HTTPS
      - "traefik.http.routers.api-test.tls.certresolver=letsencrypt"

  postgres_db:
    build:
      context: ./server/project/db
      dockerfile: Dockerfile.post
    container_name: postgres_db
    volumes:
      - postgres_data_test:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=flower_letter
      - POSTGRES_PASSWORD=flower_letter

  mongo_db:
    build:
      context: ./server/project/db
      dockerfile: Dockerfile.mongo
    container_name: mongo_db
    expose:
      - 27017
    volumes:
      - mongo_data_test:/var/lib/mongodb/data/
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=root
      - MONGODB_INITDB_ROOT_PASSWORD=password123

  test_ml:
    build:
      context: ./ml/model-api
      dockerfile: Dockerfile.comb
    # command: uvicorn app.main:app --host 0.0.0.0 --reload
    # volumes:
    #   - ./ml/model-api:/app # for auto reload
    container_name: test_ml_container
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mlapi-test.rule=Host(`${TEST_ML_DOMAIN}`)"
      - "traefik.http.routers.mlapi-test.tls=true" # HTTPS
      - "traefik.http.routers.mlapi-test.tls.certresolver=letsencrypt"

  test_office:
    build:
      context: ./office/project
      dockerfile: Dockerfile.prod
    container_name: test_office_container
    env_file:
      - ./office/.env.test
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.test-office.rule=Host(`${TEST_OFFICE_DOMAIN}`)"
      - "traefik.http.routers.test-office.tls=true" # HTTPS
      - "traefik.http.routers.test-office.tls.certresolver=letsencrypt"
      - "traefik.http.routers.test-office.middlewares=auth" # HTTP BasicAuth middleware
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$jIKW.bdS$$eKXe4Lxjgy/rH65wP1iQe1" # Username & hashed password for login (password)
  
  

volumes:
  postgres_data_test:
  mongo_data_test:

