version: '3.8'

services:
#===================
# PRODUCTION ENV
#===================
  prod_nginx:
    build: 
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: prod_nginx_container
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flowerletter-prod.rule=HOST(`www.${PROD_DOMAIN}`,`${PROD_DOMAIN}`)"
      - "traefik.http.routers.flowerletter-prod.tls=true" # HTTPS
      - "traefik.http.routers.flowerletter-prod.tls.certresolver=letsencrypt"
  
  prod_api:
    build: 
      context: ./server/project
      dockerfile: Dockerfile.prod
    container_name: prod_api_container
    expose:
      - 80
    env_file:
      - ./server/.env.prod
    depends_on:
      - prod_postgres_db
      - prod_mongo_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-prod.rule=Host(`${PROD_API_DOMAIN}`)"
      - "traefik.http.routers.api-prod.tls=true" # HTTPS
      - "traefik.http.routers.api-prod.tls.certresolver=letsencrypt"

  prod_ml:
    build:
      context: ./ml/model-api
      dockerfile: Dockerfile.comb
    container_name: ml_container
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mlapi-prod.rule=Host(`${PROD_ML_DOMAIN}`)"
      - "traefik.http.routers.mlapi-prod.tls=true" # HTTPS
      - "traefik.http.routers.mlapi-prod.tls.certresolver=letsencrypt"

  prod_postgres_db:
    build:
      context: ./server/project/db
      dockerfile: Dockerfile.post
    container_name: postgres_db_prod
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=flower_letter
      - POSTGRES_PASSWORD=flower_letter

  prod_mongo_db:
    build:
      context: ./server/project/db
      dockerfile: Dockerfile.mongo
    container_name: mongo_db_prod
    expose:
      - 27017
    volumes:
      - mongo_data_prod:/var/lib/mongodb/data/
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=root
      - MONGODB_INITDB_ROOT_PASSWORD=password123
  
  prod_office:
    build:
      context: ./office/project
      dockerfile: Dockerfile.prod
    container_name: prod_office_container
    env_file:
      - ./office/.env.prod
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prod-office.rule=Host(`${PROD_OFFICE_DOMAIN}`)"
      - "traefik.http.routers.prod-office.tls=true" # HTTPS
      - "traefik.http.routers.prod-office.tls.certresolver=letsencrypt"
      - "traefik.http.routers.prod-office.middlewares=prod-office-auth" # HTTP BasicAuth middleware
      - "traefik.http.middlewares.prod-office-auth.basicauth.users=admin:$$apr1$$jIKW.bdS$$eKXe4Lxjgy/rH65wP1iQe1" # Username (password)

volumes:
  postgres_data_prod:
  mongo_data_prod:
